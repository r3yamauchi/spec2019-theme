{
  "service": {
    "service": "jeffpay",
    "serviceObject": {
      "name": "jeffpay"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "python3.7",
      "region": "ap-northeast-1",
      "timeout": 30,
      "tracing": true,
      "logs": {
        "restApi": true
      },
      "environment": {
        "TZ": "Asia/Tokyo",
        "USER_TABLE": {
          "Ref": "UserTable"
        },
        "PAYMENT_HISTORY_TABLE": {
          "Ref": "PaymentHistoryTable"
        },
        "NOTIFICATION_QUEUE": {
          "Ref": "NotificationQueue"
        },
        "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
        "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*",
            "sqs:*"
          ],
          "Resource": [
            "*"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-CreateUser"
            }
          },
          "WalletChargeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-WalletCharge"
            }
          },
          "WalletUseLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-WalletUse"
            }
          },
          "WalletTransferLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-WalletTransfer"
            }
          },
          "GetUserSummaryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-GetUserSummary"
            }
          },
          "GetPaymentHistoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-GetPaymentHistory"
            }
          },
          "SendNotificationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jeffpay-dev-SendNotification"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "jeffpay",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jeffpay-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jeffpay-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "NotificationQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "jeffpay",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-CreateUser",
              "Handler": "handler.user_create",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "CreateUserLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateUserLambdaVersionvNExgaVgXwxjHI2OsLpCj8qjWbpyDtOCGOC57zELo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUserLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "WalletChargeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-WalletCharge",
              "Handler": "handler.wallet_charge",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "WalletChargeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WalletChargeLambdaVersionfE3I4u3K1fn9ngAehz013xaTlRPUgS9YNYoMryg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WalletChargeLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "WalletUseLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-WalletUse",
              "Handler": "handler.wallet_use",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "WalletUseLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WalletUseLambdaVersionVPz9XFwxz4vLOOh8Kk8c7oDmsumX9IUJAp8MY0Nm8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WalletUseLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "WalletTransferLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-WalletTransfer",
              "Handler": "handler.wallet_transfer",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "WalletTransferLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WalletTransferLambdaVersionLv4kXnuttJUJVgg1dRZCFEprTvXZZsZKcK1vEvvg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WalletTransferLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "GetUserSummaryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-GetUserSummary",
              "Handler": "handler.get_user_summary",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "GetUserSummaryLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetUserSummaryLambdaVersionaCiahkHYfH74ZRKO1r3CTftATSemN4Yp30z5mNjEc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserSummaryLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "GetPaymentHistoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-GetPaymentHistory",
              "Handler": "handler.get_payment_history",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "GetPaymentHistoryLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetPaymentHistoryLambdaVersionJJwgVuDhPT7QldJ7VUABodbaeBRaqvhm1nTzhlGmAlQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPaymentHistoryLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "SendNotificationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/jeffpay.zip"
              },
              "FunctionName": "jeffpay-dev-SendNotification",
              "Handler": "handler.send_notification",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "USER_TABLE": {
                    "Ref": "UserTable"
                  },
                  "PAYMENT_HISTORY_TABLE": {
                    "Ref": "PaymentHistoryTable"
                  },
                  "NOTIFICATION_QUEUE": {
                    "Ref": "NotificationQueue"
                  },
                  "NOTIFICATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/notification",
                  "LOCATION_ENDPOINT": "https://o5wb09mgpg.execute-api.ap-northeast-1.amazonaws.com/prod/location"
                }
              }
            },
            "DependsOn": [
              "SendNotificationLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendNotificationLambdaVersionppJtzZzD9pitFDqJEsc5stgFOdGBfCE3JStk8zcCSjY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendNotificationLambdaFunction"
              },
              "CodeSha256": "ScLv85L28Rir16jtgVDjYixKDgBL3u43pzzG4rkdyno="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-jeffpay",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersUseridVarSummary": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsersUseridVar"
              },
              "PathPart": "summary",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersUseridVarHistory": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsersUseridVar"
              },
              "PathPart": "history",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWallet": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "wallet",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWalletCharge": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceWallet"
              },
              "PathPart": "charge",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWalletUse": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceWallet"
              },
              "PathPart": "use",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWalletTransfer": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceWallet"
              },
              "PathPart": "transfer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodWalletChargePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceWalletCharge"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WalletChargeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodWalletUsePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceWalletUse"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WalletUseLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodWalletTransferPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceWalletTransfer"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WalletTransferLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersUseridVarSummaryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersUseridVarSummary"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserSummaryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersUseridVarHistoryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersUseridVarHistory"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPaymentHistoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1576226752781": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUsersPost",
              "ApiGatewayMethodWalletChargePost",
              "ApiGatewayMethodWalletUsePost",
              "ApiGatewayMethodWalletTransferPost",
              "ApiGatewayMethodUsersUseridVarSummaryGet",
              "ApiGatewayMethodUsersUseridVarHistoryGet"
            ]
          },
          "CreateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WalletChargeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WalletChargeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WalletUseLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WalletUseLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WalletTransferLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WalletTransferLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserSummaryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserSummaryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetPaymentHistoryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPaymentHistoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/jeffpay-dev"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "jeffpay",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn:aws:iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": "arn:aws:apigateway:*::/account",
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z/custom-resources.zip"
              },
              "FunctionName": "jeffpay-dev-custom-resource-apigw-cw-role",
              "Handler": "apiGatewayCloudWatchRole/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "SendNotificationEventSourceMappingSQSNotificationQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "NotificationQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendNotificationLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": "True"
            }
          },
          "NotificationQueue": {
            "Type": "AWS::SQS::Queue"
          },
          "UserTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "PaymentHistoryTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "transactionId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "transactionId",
                  "KeyType": "RANGE"
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "timestampIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "timestamp",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "CreateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUserLambdaVersionvNExgaVgXwxjHI2OsLpCj8qjWbpyDtOCGOC57zELo"
            }
          },
          "WalletChargeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WalletChargeLambdaVersionfE3I4u3K1fn9ngAehz013xaTlRPUgS9YNYoMryg"
            }
          },
          "WalletUseLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WalletUseLambdaVersionVPz9XFwxz4vLOOh8Kk8c7oDmsumX9IUJAp8MY0Nm8"
            }
          },
          "WalletTransferLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WalletTransferLambdaVersionLv4kXnuttJUJVgg1dRZCFEprTvXZZsZKcK1vEvvg"
            }
          },
          "GetUserSummaryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserSummaryLambdaVersionaCiahkHYfH74ZRKO1r3CTftATSemN4Yp30z5mNjEc"
            }
          },
          "GetPaymentHistoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPaymentHistoryLambdaVersionJJwgVuDhPT7QldJ7VUABodbaeBRaqvhm1nTzhlGmAlQ"
            }
          },
          "SendNotificationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendNotificationLambdaVersionppJtzZzD9pitFDqJEsc5stgFOdGBfCE3JStk8zcCSjY"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "CreateUser": {
        "handler": "handler.user_create",
        "events": [
          {
            "http": {
              "path": "users",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-CreateUser",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "WalletCharge": {
        "handler": "handler.wallet_charge",
        "events": [
          {
            "http": {
              "path": "wallet/charge",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-WalletCharge",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "WalletUse": {
        "handler": "handler.wallet_use",
        "events": [
          {
            "http": {
              "path": "wallet/use",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-WalletUse",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "WalletTransfer": {
        "handler": "handler.wallet_transfer",
        "events": [
          {
            "http": {
              "path": "wallet/transfer",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-WalletTransfer",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "GetUserSummary": {
        "handler": "handler.get_user_summary",
        "events": [
          {
            "http": {
              "path": "users/{userId}/summary",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-GetUserSummary",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "GetPaymentHistory": {
        "handler": "handler.get_payment_history",
        "events": [
          {
            "http": {
              "path": "users/{userId}/history",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jeffpay-dev-GetPaymentHistory",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      },
      "SendNotification": {
        "handler": "handler.send_notification",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "jeffpay-dev-SendNotification",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.7",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "NotificationQueue": {
          "Type": "AWS::SQS::Queue"
        },
        "UserTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "PaymentHistoryTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "transactionId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "transactionId",
                "KeyType": "RANGE"
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "timestampIndex",
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "timestamp",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/home/yamauchi/Downloads/spec2019-theme/.serverless/jeffpay.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/jeffpay/dev/1576226754430-2019-12-13T08:45:54.430Z",
    "artifact": "jeffpay.zip"
  }
}